[user]
	name = Lucas Russo
	email = lerwys@gmail.com
[core]
	editor = vim
	whitespace = trailing-space,space-before-tab
[merge]
	tool = meld
[push]
	default = simple
[color]
	ui = true
[tool]
	diff = meld
[alias]
    # st = status
    st = status

    # sh = show
    sh = show
    shf = show --name-status
    shh = "! f() { HEADN=$1; shift; git show "HEAD~$HEADN" $@; }; f"

    # l = log (except ls for list)
    l = "!git log --color=always --abbrev-commit --graph --decorate --all"
    lg = !"git lg1"
    lg1 = !"git lg1-specific --all"
    lg2 = !"git lg2-specific --all"
    lg3 = !"git lg3-specific --all"

    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'

    # ls = list
    ls = ls-tree HEAD --

    # b = branch
    b = branch
    br = "! f() { git branch -vv --color=always | head -n 20; }; f"
    bn = checkout -b  # n = new
    bd = branch -D  # d = delete
    # list branches sorted by last modified
    bl = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

    # d = diff
    d = diff
    dst = diff --name-status
    dca = diff --cached
    dm = ! git diff $(git main-branch)...HEAD

    # o = checkout
    o = checkout
    om = ! git checkout $(git main-branch)
    of = checkout -f

    # a = add
    a = add
    aa = add -A :/
    apa = add --patch

    # c = commit (except cp for cherry-pick)
    c = commit
    ca = commit -a
    cm = commit --amend
    cn = commit -n
    cam = commit -a --amend
    can = commit -a -n
    cmn = commit --amend -n
    camn = commit -a --amend -n
    cw = commit -a -n -m "WIP"
    # Undo cw.
    ucw = reset HEAD~1

    # cp = cherry-pick, intruding into c (commit) namespace
    cp = cherry-pick

    # r = rebase
    r = rebase
    rbm = ! git rebase origin/$(git main-branch)  # `rm` is taking by the "git delete" logic
    ri = rebase -i
    rim = ! git rebase -i origin/$(git main-branch)
    rc = rebase --continue
    ra = rebase --abort

    # p = push (except pu for pull)
    p = push
    pf = push --force-with-lease

    # pu = pull
    pu = pull

    # list aliases
    la = "!git config -l | grep alias | cut -c 7-"
